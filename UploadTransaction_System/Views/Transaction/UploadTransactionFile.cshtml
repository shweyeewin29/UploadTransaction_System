@model UploadTransaction_System.Models.FileRecordInfo
@{
    ViewBag.Title = "UploadTransactionFile";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@Styles.Render("~/bundles/toolscss")
<div class="container" style="margin-top:70px;">
    <div class="row">
        <div class="col-md-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <h4><b>Upload Transction Data From File</b></h4>
                    <hr />
                </div>
            </div>
            @using (Ajax.BeginForm("UploadTransactionFile", "Transaction",
               new AjaxOptions
               {
                   OnSuccess = "OnSuccess",
                   OnFailure = "OnFailure",
                   LoadingElementId = "progress",
                   UpdateTargetId = "ParentDiv"
               }, new { @class = "form-vertical", enctype = "multipart/form-data", @id = "UploadForm" }))
            {
                @Html.AntiForgeryToken()
                <br />
                <div class="form-group">

                    <div class="col-md-4 col-sm-4 col-xs-12">
                        <label>Transaction File <strong style="color:red;">*</strong></label>
                        @Html.TextBoxFor(x => x.TransactionFile, new { type = "file", accept = ".csv,.xml", tabindex = "1", @class = "form-control", @autoComplete = "Off", onchange = "ValidateSize(this)" })
                        @Html.ValidationMessageFor(m => m.TransactionFile, "", new { @class = "text-danger", @style = "font-size:small;" })
                    </div>
                    <div class="col-md-4 col-sm-4 col-xs-12 pull-left">
                        <label>&nbsp;</label><br />
                        <button class="btn btn-primary" type="submit" value="submit" tabindex="2">Upload</button>
                    </div>

                </div>
            }
        </div>

    </div>
    <br />
    <div class="row">

        <div class="col-md-12">
            <div class="form-group">
                <div class="col-md-12 col-sm-12 col-xs-12">
                    <hr />
                    <h4><b>File Record List</b></h4>

                </div>
            </div>
            <div class="form-group">
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <label>From Date: </label>
                    @Html.TextBox("FromDate", "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @tabindex = "3", width = "100%" })
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <label>To Date: </label>
                    @Html.TextBox("ToDate", "{0:yyyy-MM-dd}", new { @class = "form-control", @type = "date", @tabindex = "3", width = "100%" })
                </div>
                <div class="col-md-4 col-sm-4 col-xs-12">
                    <label>&nbsp;</label><br />
                    <button class="btn btn-info" type="button" tabindex="4" id="btnView">View</button>
                </div>
            </div>
            <br />
            <div class="form-group">
                <div class="col-md-12 col-xs-12 col-sm-12">
                    <br />
                    <div class="table-responsive">
                        <table class="table table-bordered" cellspacing="0" id="RecordTbl">
                            <thead>
                                <tr>
                                    <th>File No.</th>
                                    <th>File Name</th>
                                    <th>Created Date</th>
                                    <th>Created IP</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td colspan="4" style="text-align:center;">No Data.</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="progress" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; display:none;">
    <p style="position: center;">
        <div class="ring">
        </div>
    </p>
</div>
@section Scripts{
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/toolsjs")
    <script type="text/javascript">

        $(document).ready(function () {
            GetDate();

            $("#btnView").click(function () {
                $("#progress").show();
                FileRecordFillGrid();
            });
        });
        function GetDate() {
            var today = new Date().toISOString().slice(0, 10);
            $("#FromDate").val(moment(new Date()).format("YYYY-MM-DD"));
            $("#ToDate").val(moment(new Date()).format("YYYY-MM-DD"));
        }
        function OnSuccess(response) {
            if (response == 200) {
                
                swal({
                    title: "Success!",
                    text: "File is successfully imported!",
                    type: "success"
                }, function () {
                    $("#TransactionFile").val('');
                });
                
            }
            else if (response.status == false) {
                swal("Error!", response.MessageContent, "error");
            }
        }

        function OnFailure(response) {
            swal(
                {
                    title: "File Uploading!",
                    text: response.MessageContent,
                    type: "error"
                });
        }
        function ValidateSize(thisup) {

            if (thisup.files[0].size > 1048576) {
                swal("Warning!", "Maximum size allowed is 1 MB.", "warning");

                $(thisup).val('');
            } else {
                var fileName = thisup.value.substr(thisup.value.lastIndexOf("\\") + 1, thisup.value.length);
                var ext = fileName.split('.').pop().toLowerCase();
                if ($.inArray(ext, ['csv', 'xml']) == -1) {
                    alert('Unknown format!');
                    $(thisup).val("");
                }
            }
        };

        function FileRecordFillGrid() {
            var table = $('#RecordTbl').DataTable(
                {
                    "destroy": true,
                    "responsive": false,
                    "scrollX": false,
                    "displayLength": 50,
                    "pageLength": 50,
                    "lengthMenu": [10, 15, 20, 25, 50, 75, 100],
                    dom: "<'row'<'col-sm-6'B><'col-sm-6'f> >" +
                        "<'row'<'col-sm-12'tr>>" +
                        "<'row'<'col-sm-4'l><'col-sm-4'i><'col-sm-4'p>>",
                    buttons: [
                        {
                            extend: 'excelHtml5',
                            footer: true,
                            title: 'File Record List ',
                            exportOptions: {
                                columns: 'visible'
                            },
                            filename: function () {
                                return "File Record List";
                            },
                            customize: function (xlsx) {
                                var sheet = xlsx.xl.worksheets['sheet1.xml'];
                                $('c[r=A1]', sheet).attr('s', '50');
                                $('c[r=A1]', sheet).attr('s', '2');
                                $('c[r=A2]', sheet).attr('s', '50');
                                $('c[r=A2]', sheet).attr('s', '2');
                            }
                        },
                    ],
                    "ajax": {
                        "url": "/api/transactionapi/getfilerecordlist/?fromdate=" + $("#FromDate").val() + "&todate=" + $("#ToDate").val(),
                        "type": "GET",
                        "datatype": "json",
                        "dataSrc": ''
                    },
                    "initComplete": function (settings, json) {
                        $("#progress").hide();
                    },
                    "columns": [
                        { "data": "FileId", width: '20%' },
                        { "data": "FileName"},
                        { "data": "CreatedDate"},
                        { "data": "CreatedIPAddress"},
                    ],
                    "columnDefs": [
                        {
                            "targets": [2],
                            "data": '',
                            "render": function (data, type, row) {
                                if (data != null) {
                                    return moment(data).format('DD-MMM-YYYY');
                                }
                                else {
                                    return null;
                                }
                            }
                        },
                    ],
                   
                });
            return table;
        }
        (function ($) {
            var defaultOptions = {
                errorClass: 'has-error',
                validClass: '',
                highlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group")
                        .addClass(errorClass)
                        .removeClass(validClass);
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).closest(".form-group")
                        .removeClass(errorClass)
                        .addClass(validClass);
                }
            };

            $.validator.setDefaults(defaultOptions);

            $.validator.unobtrusive.options = {
                errorClass: defaultOptions.errorClass,
                validClass: defaultOptions.validClass,
            };
        })(jQuery);


    </script>

}